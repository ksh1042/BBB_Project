<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">


	<http pattern="/resources/**" security="none" />
	
	<authentication-manager id="memberAuthManager">
		<authentication-provider>
			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="select id as username,pwd as password,enabled
					 from tbl_member
					 where id=?"			
				authorities-by-username-query=
					"select id as username, authority
					 from tbl_authorities
					 where id=?"
			/>		
		</authentication-provider>
	</authentication-manager>

	<http pattern="/**" use-expressions="true" authentication-manager-ref="memberAuthManager">

		<access-denied-handler error-page="/security/accessDenied" />
		<intercept-url pattern="/commons/**" access="permitAll" />
		<intercept-url pattern="/**" access="isAuthenticated()" />
		
		<intercept-url pattern="/project/my*" access="isAuthenticated()" />
		<intercept-url pattern="/project/*" access="isAuthenticated()" />
		<intercept-url pattern="/admin/**" access="hasAuthority('ROLE_ADMIN')" />
		<intercept-url pattern="/question/**" access="permitAll" />
		
		<!--  
		anonymous() 인증되지 않은 사용자가 접근 가능
		isAuthenticated() 인증된 사용자만 접근 가능.
		fullyAuthenticated() 완전히 인증된 사용자만 접근가능
		hasRole() or hasAnyRole() 특정 권한을 가지는 사용자만 접근 가능
		hasAuthority() or hasAnyAuthority() 특정 권한을 가지는 사용자만 접근 가능
		hasIpAddress() 특정 아이피 주소를 가지는 사용자만 접근 가능
		access() SpEL 표현식에 의한 결과에 따라 접근 가능
		not() 접근 제한 기능을 해제
		permitAll() or denyAll() 접근을 전부 허용하거나 제한함.
		rememberMe() 리멤버 기능을 통해 로그인한 사용자만 접근함.
		-->
		
		<!-- 로그인 페이지 지정 부분 -->
		<form-login login-page="/commons/loginForm"
			login-processing-url="/commons/login" username-parameter="id"
			password-parameter="pwd" authentication-success-handler-ref="loginSuccessSecurityHandler"
			authentication-failure-handler-ref="loginFailureSecurityHandler" />
		
		<!-- 로그아웃 시 보여줄 페이지 설정 -->
		<logout logout-url="/commons/logout" invalidate-session="true"
			logout-success-url="/commons/loginForm" />

		<!-- 중복 로그인 방지 설정 -->
		<session-management>
			<concurrency-control max-sessions="1" expired-url="/login_duplicate"/>
		</session-management>
		
	</http>
	
	<beans:bean id="loginSuccessSecurityHandler"

		class="com.bbb.security.LoginSuccessSecurityHandler"
		p:defaultTargetUrl="/main" />
	<beans:bean id="loginFailureSecurityHandler"
				class="com.bbb.security.LoginFailureSecurityHandler"
				p:defaultFailureUrl="/commons/loginForm"
				p:useForward="true"
				/>
	
</beans:beans>







